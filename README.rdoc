= s3-static-site

Allows users to deploy static websites to Amazon S3 using Capistrano.

== Setup

In order to get started, you need to install the following gem:

  gem install s3-static-site
  
This will install the gem, along with the dependencies: Capistrano 2+ and AWS::S3.

== Creating a website

To start a static website, just create a folder somewhere on your hard drive:

  mkdir -p ~/www.tastyrails.com
  
Once you do that, you'll need to generate deployment scripts:

  cd ~/www.tastyrails.com
  capify .
  cat /dev/null > config/deploy.rb

Add all of your files you want deployed to S3 to the +public/+ folder:

  mkdir -p public/
  touch public/index.html
  touch public/error.html
  cat "This is a page which will be uploaded!" > public/index.html

== Configure your deployment

s3-static-site overrides the default Capistrano recipes for Rails projects with its own scripts. Here's a sample deployment script to get you started:

  require 's3-static-site'

  set :bucket, "www.tastyrails.com"
  set :access_key_id, "access-key-id"
  set :secret_access_key, "secret-access-key"

Replace the +access_key_id+ and +secret_access_key+ from the values found in the AWS Management Console. 

=== S3 write options

s3-static-site sets files +:content_type+ and +:acl+ to +:public_read+, add or override with :

  set :bucket_write_options, {
    cache_control: "max-age=94608000, public"
  }

See aws-sdk S3Object.write:http://rubydoc.info/github/amazonwebservices/aws-sdk-for-ruby/master/AWS/S3/S3Object#write-instance_method documentation for all available options.

== Create your bucket

If you haven't already created a bucket for use with Amazon S3 static website hosting, you'll need to do this before deployment. Instructions can be found here:

http://docs.amazonwebservices.com/AmazonS3/latest/dev/index.html?HostingWebsiteQS1.html

== Deploying

After setting up your +config/deploy.rb+ file and creating the bucket with Amazon, you can deploy using the following command:

  cap deploy

== Rendering with HAML or SASS

s3-static-site allows you to either upload files to S3 as you'd statically find them on your hard drive, or you can use HAML or SASS to generate HTML using Ruby.

For HAML generation, append +.haml+ to the end of your file, like:

  index.html.haml
  
For SASS:

  stylesheet.css.sass
  
When uploaded to S3, the +.haml+ and +.sass+ will be removed, leaving either +index.html+ or +stylesheet.css+.

== Copyright 

Copyright (c) 2012 Josh Delsman & miomoba, Inc. See LICENSE.txt for details.